MongoDB CRUD Operations Guide:
https://docs.mongodb.com/manual/crud/

MongoDB Installation Guide:
Windows: https://zarkom.net/blogs/how-to-install-mongodb-for-development-in-windows-3328
Windows: https://www.youtube.com/watch?v=FwMwO8pXfq0&t=176s Worked for me
Mac: https://www.udemy.com/course/the-web-developer-bootcamp/learn/lecture/22086120#overview

Windows Guide:
After installing the MongoDB Server:
1) Open Edit the system environtment variables
2) Set system PATH to C:\Program Files\MongoDB\Server\5.0\bin
3) Restart PowerShell
4) Execute > New-Item -Path "C:\" -Name "data\db" -ItemType "directory"
5) Execute > mongod
If error with server connection do the following:
6) Open Services
7) Find MongoDB Server and click Run button
------------------ To Run ------------------
8) In 1st powershell Execute > mongod
9) In 2nd powershell Execute > mongo


Mac Guide:
1) Update / Upgrade Brew
2) Execute > brew tap mongodb/brew
3) Execute > brew install mongodb-community@5.0
If error cccures do the following:
4) Update Mac Os Software.  Execute > softwareupdate --all --install --force
5) Execute > sudo rm -rf /Library/Developer/CommandLineTools
6) sudo xcode-select --install
------------------ To Run ------------------
8) Execute > brew services start mongodb/brew/mongodb-community    // runs as service
        or > brew services start mongodb-community@5.0
9) Execute > brew services      // check that mongodb service is running
10) Execute > mongodb
11) Execute > brew services stop mongodb/brew/mongodb-community    // stops service 
         or > brew services stop mongodb-community@5.0

The Mongo shell is based on JavaScript

Clear Screen -> Ctrl + l

To delete everyhitn in collection
Execute > db.<collection_name>.deleteMany({})

Connect to mongoose reference:
https://mongoosejs.com/

Query Examples:
 Movie.find({year: {$gte: '2005'}}).then(data => console.log(data)) // find all movies whose year is greater than or equal to 2005
 // Note: Movie.find({year: {$gte: '2005'}}) is not a promise, it uses a thenable object.  If you want it to return a promise use .exit()
 // Note: Movie.updateOne({title: 'Transformers'}, {year: 2003}).then(res => console.log(res))  Update record titled transformers to have a year of 2003
 Movie.remove({title: 'Transformers'}).then(msg => console.log(msg)) // Delete Transformers Movie
 Movie.findOneAndDelete({title: 'Frozen'}).then(msg => console.log(msg)) // Delete first Frozen movie found in db